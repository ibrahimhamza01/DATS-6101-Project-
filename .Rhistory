library(dplyr)
library(ggplot2)
library(scales)
library(gridExtra)
library(ezids)
library(survey)
library(kableExtra)
library(stats)
setwd(../)
setwd('../')
getwd()
library(dplyr)
library(ggplot2)
library(scales)
library(gridExtra)
library(ezids)
library(survey)
library(kableExtra)
library(stats)
create_small_brfss <- function(data, year_col = "interview_year", n_per_year = 10000, seed = 2025) {
set.seed(seed)  # for reproducibility
data %>%
group_by(.data[[year_col]]) %>%
slice_sample(n = n_per_year) %>%
ungroup()
}
brfss <- create_small_brfss(readRDS('data/processed/brfss_2018_2023.rds'), year_col = "interview_year", n_per_year = 1000)
brfss$interview_year <- factor(brfss$interview_year)
create_small_brfss <- function(data, year_col = "interview_year", n_per_year = 10000, seed = 2025) {
set.seed(seed)  # for reproducibility
data %>%
group_by(.data[[year_col]]) %>%
slice_sample(n = n_per_year) %>%
ungroup()
}
brfss <- create_small_brfss(readRDS('data/processed/brfss_2018_2023.rds'), year_col = "interview_year", n_per_year = 10000)
brfss$interview_year <- factor(brfss$interview_year)
obesity_trend <- brfss %>%
group_by(interview_year) %>%
summarise(obesity_prev = mean(overweight_or_obese == "Yes", na.rm = TRUE), .groups = "drop")
p_trend <- ggplot(obesity_trend, aes(x = interview_year, y = obesity_prev)) +
geom_line(color = "darkred", size = 1.1) +
geom_point(size = 3) +
scale_y_continuous(labels = percent_format(accuracy = 1)) +
labs(title = "Obesity Prevalence Trend (2018â€“2023)",
x = "Year", y = "Proportion Overweight/Obese") +
theme_minimal(base_size = 14)
p_trend
options(survey.lonely.psu = "adjust")
brfss_design <- svydesign(
ids = ~psu,
strata = ~strata,
weights = ~weight_final,
data = brfss,
nest = TRUE
)
survey_anova_table <- function(svy_model, factor_name) {
library(survey)
f_test <- regTermTest(svy_model, as.formula(paste0("~", factor_name)))
Df_num <- f_test$df[1]
F_val  <- f_test$Ftest
P_val  <- f_test$p
data.frame(
Term = factor_name,
Df_num = Df_num,
F_value = F_val,
Pr_F = P_val
)
}
survey_tukey_table_fixed <- function(svy_model, factor_name, conf_level = 0.95, digits = NULL) {
coefs <- coef(svy_model)
vc <- vcov(svy_model)
coef_names <- names(coefs)
mf <- model.frame(svy_model)
if (!factor_name %in% names(mf)) stop("factor_name not found in model frame")
levels_factor <- levels(mf[[factor_name]])
if (is.null(levels_factor) || length(levels_factor) < 2) stop("factor must have >= 2 levels")
alpha <- 1 - conf_level
zval <- qnorm(1 - alpha/2)
mean_vector_for_level <- function(level) {
vec <- rep(0, length(coefs))
names(vec) <- coef_names
if ("(Intercept)" %in% coef_names) vec["(Intercept)"] <- 1
ref_level <- levels_factor[1]
if (level == ref_level) return(vec)
target_name <- paste0(factor_name, level)
if (!target_name %in% coef_names) {
matches <- grep(paste0(factor_name, ".*", level, "$"), coef_names, value = TRUE)
if (length(matches) == 0) stop("Cannot find coefficient name for level: ", level)
target_name <- matches[1]
}
vec[target_name] <- 1
return(vec)
}
pairs <- combn(levels_factor, 2, simplify = FALSE)
rows <- lapply(pairs, function(pr) {
l1 <- pr[1]; l2 <- pr[2]
v1 <- mean_vector_for_level(l1)
v2 <- mean_vector_for_level(l2)
contrast <- v2 - v1                 # mean(level2) - mean(level1)
diff <- as.numeric(sum(coefs * contrast))
var_diff <- as.numeric(t(contrast) %*% vc %*% contrast)
se <- sqrt(var_diff)
lwr <- diff - zval * se
upr <- diff + zval * se
pval <- 2 * (1 - pnorm(abs(diff / se)))
tib <- data.frame(
Comparison = paste0(l2, " - ", l1),
diff = diff,
lwr = lwr,
upr = upr,
p_value = pval,
stringsAsFactors = FALSE
)
return(tib)
})
out <- bind_rows(rows)
if (!is.null(digits) && is.numeric(digits)) {
numcols <- setdiff(names(out), "Comparison")
out[numcols] <- lapply(out[numcols], function(x) round(x, digits))
}
rownames(out) <- NULL
return(out)
}
anova_exercise <- svyglm(bmi ~ any_exercise_last_month, design = brfss_design)
anova_table <- survey_anova_table(anova_exercise, "any_exercise_last_month")
kable(anova_table)
create_small_brfss <- function(data, year_col = "interview_year", n_per_year = 2000, seed = 2025) {
set.seed(seed)  # for reproducibility
data %>%
group_by(.data[[year_col]]) %>%
slice_sample(n = n_per_year) %>%
ungroup()
}
brfss <- create_small_brfss(readRDS('data/processed/brfss_2018_2023.rds'), year_col = "interview_year", n_per_year = 10000)
brfss$interview_year <- factor(brfss$interview_year)
brfss <- create_small_brfss(readRDS('data/processed/brfss_2018_2023.rds'), year_col = "interview_year", n_per_year = 2000)
brfss$interview_year <- factor(brfss$interview_year)
brfss$interview_year <- factor(brfss$interview_year)
brfss$interview_year <- factor(brfss$interview_year)
options(survey.lonely.psu = "adjust")
brfss_design <- svydesign(
ids = ~psu,
strata = ~strata,
weights = ~weight_final,
data = brfss,
nest = TRUE
)
anova_exercise <- svyglm(bmi ~ any_exercise_last_month, design = brfss_design)
anova_table <- survey_anova_table(anova_exercise, "any_exercise_last_month")
kable(anova_table)
tukey_fixed <- survey_tukey_table_fixed(anova_exercise, "any_exercise_last_month", conf_level = 0.95, digits = 3)
kable(tukey_fixed)
anova_binge <- svyglm(bmi ~ binge_drinking, design = brfss_design)
anova_table <- survey_anova_table(anova_binge, "binge_drinking")
kable(anova_table)
tukey_fixed <- survey_tukey_table_fixed(anova_binge, "binge_drinking", conf_level = 0.95, digits = 3)
kable(tukey_fixed)
anova_year <- svyglm(bmi ~ factor(interview_year), design = brfss_design)
anova_table <- survey_anova_table(anova_year, "interview_year")
anova_year <- svyglm(bmi ~ interview_year, design = brfss_design)
anova_table <- survey_anova_table(anova_year, "interview_year")
kable(anova_table)
svy_chi_test <- function(var1, var2, design) {
fml <- as.formula(paste0("~", var1, " + ", var2))
wt_table <- svytable(fml, design = design)
chisq_svy <- svychisq(fml, design = design, statistic = "Chisq")
row_totals <- margin.table(wt_table, 1)
col_totals <- margin.table(wt_table, 2)
total <- sum(wt_table)
expected <- outer(row_totals, col_totals) / total
std_resid <- (wt_table - expected) / sqrt(expected)
chi_summary <- data.frame(
Statistic = chisq_svy$statistic,
DF = chisq_svy$parameter,
P_Value = chisq_svy$p.value
)
list(
summary = chi_summary,
std_resid = std_resid
)
}
result <- svy_chi_test("bmi_category", "any_exercise_last_month", brfss_design)
xkabledply(result$summary, title = "Survey Chi-square Test: BMI vs Exercise")
xkabledply(result$std_resid, title = "Standardized Residuals: BMI vs Exercise")
result <- svy_chi_test("bmi_category", "binge_drinking", brfss_design)
xkabledply(result$summary, title = "Survey Chi-square Test: BMI vs Binge Drinking")
result <- svy_chi_test("bmi_category", "interview_year", brfss_design)
svy_chi_test <- function(var1, var2, design) {
fml <- as.formula(paste0("~", var1, " + ", var2))
chisq_svy <- svychisq(fml, design = design, statistic = "Chisq")
chi_summary <- data.frame(
Statistic = chisq_svy$statistic,
DF = chisq_svy$parameter,
P_Value = chisq_svy$p.value
)
chi_summary
}
svy_chi_test <- function(var1, var2, design) {
fml <- as.formula(paste0("~", var1, " + ", var2))
chisq_svy <- svychisq(fml, design = design, statistic = "Chisq")
chi_summary <- data.frame(
Statistic = chisq_svy$statistic,
DF = chisq_svy$parameter,
P_Value = chisq_svy$p.value
)
chi_summary
}
result <- svy_chi_test("bmi_category", "any_exercise_last_month", brfss_design)
xkabledply(result, title = "Survey Chi-square Test: BMI vs Exercise")
result <- svy_chi_test("bmi_category", "binge_drinking", brfss_design)
xkabledply(result, title = "Survey Chi-square Test: BMI vs Binge Drinking")
result <- svy_chi_test("bmi_category", "interview_year", brfss_design)
xkabledply(result, title = "Survey Chi-square Test: BMI vs Interview Year")
# binge_drinking ~ interview_year
result <- svy_chi_test("binge_drinking", "interview_year", brfss_design)
xkabledply(result, title = "Survey Chi-square Test: BMI vs Interview Year")
result <- svy_chi_test("overweight_or_obese", "binge_drinking", brfss_design)
xkabledply(result, title = "Survey Chi-square Test: BMI vs Interview Year")
survey_anova_table <- function(svy_model, factor_name) {
library(survey)
f_test <- regTermTest(svy_model, as.formula(paste0("~", factor_name)))
Df_num <- f_test$df[1]
F_val  <- f_test$Ftest
P_val  <- f_test$p
data.frame(
Term = factor_name,
Df_num = Df_num,
F_value = F_val,
Pr_F = P_val
)
}
survey_tukey_table_fixed <- function(svy_model, factor_name, conf_level = 0.95, digits = NULL) {
coefs <- coef(svy_model)
vc <- vcov(svy_model)
coef_names <- names(coefs)
mf <- model.frame(svy_model)
if (!factor_name %in% names(mf)) stop("factor_name not found in model frame")
levels_factor <- levels(mf[[factor_name]])
if (is.null(levels_factor) || length(levels_factor) < 2) stop("factor must have >= 2 levels")
alpha <- 1 - conf_level
zval <- qnorm(1 - alpha/2)
mean_vector_for_level <- function(level) {
vec <- rep(0, length(coefs))
names(vec) <- coef_names
if ("(Intercept)" %in% coef_names) vec["(Intercept)"] <- 1
ref_level <- levels_factor[1]
if (level == ref_level) return(vec)
target_name <- paste0(factor_name, level)
if (!target_name %in% coef_names) {
matches <- grep(paste0(factor_name, ".*", level, "$"), coef_names, value = TRUE)
if (length(matches) == 0) stop("Cannot find coefficient name for level: ", level)
target_name <- matches[1]
}
vec[target_name] <- 1
return(vec)
}
pairs <- combn(levels_factor, 2, simplify = FALSE)
rows <- lapply(pairs, function(pr) {
l1 <- pr[1]; l2 <- pr[2]
v1 <- mean_vector_for_level(l1)
v2 <- mean_vector_for_level(l2)
contrast <- v2 - v1                 # mean(level2) - mean(level1)
diff <- as.numeric(sum(coefs * contrast))
var_diff <- as.numeric(t(contrast) %*% vc %*% contrast)
se <- sqrt(var_diff)
lwr <- diff - zval * se
upr <- diff + zval * se
pval <- 2 * (1 - pnorm(abs(diff / se)))
tib <- data.frame(
Comparison = paste0(l2, " - ", l1),
diff = diff,
lwr = lwr,
upr = upr,
p_value = pval,
stringsAsFactors = FALSE
)
return(tib)
})
out <- bind_rows(rows)
if (!is.null(digits) && is.numeric(digits)) {
numcols <- setdiff(names(out), "Comparison")
out[numcols] <- lapply(out[numcols], function(x) round(x, digits))
}
rownames(out) <- NULL
return(out)
}
anova_exercise <- svyglm(bmi ~ any_exercise_last_month, design = brfss_design)
anova_table <- survey_anova_table(anova_exercise, "any_exercise_last_month")
kable(anova_table)
xkabledply(anova_table)
tukey_fixed <- survey_tukey_table_fixed(anova_exercise, "any_exercise_last_month", conf_level = 0.95, digits = 3)
xkabledply(tukey_fixed)
xkabledply(anova_table)
tukey_fixed <- survey_tukey_table_fixed(anova_exercise, "any_exercise_last_month", conf_level = 0.95, digits = 3)
xkabledply(tukey_fixed)
anova_binge <- svyglm(bmi ~ binge_drinking, design = brfss_design)
anova_table <- survey_anova_table(anova_binge, "binge_drinking")
xkabledply(anova_table)
tukey_fixed <- survey_tukey_table_fixed(anova_binge, "binge_drinking", conf_level = 0.95, digits = 3)
xkabledply(tukey_fixed)
anova_year <- svyglm(bmi ~ interview_year, design = brfss_design)
anova_table <- survey_anova_table(anova_year, "interview_year")
xkabledply(anova_table)
svy_chi_test <- function(var1, var2, design) {
fml <- as.formula(paste0("~", var1, " + ", var2))
chisq_svy <- svychisq(fml, design = design, statistic = "Chisq")
chi_summary <- data.frame(
Statistic = chisq_svy$statistic,
DF = chisq_svy$parameter,
P_Value = chisq_svy$p.value
)
chi_summary
}
result <- svy_chi_test("bmi_category", "any_exercise_last_month", brfss_design)
xkabledply(result, title = "Survey Chi-square Test: BMI vs Exercise")
result <- svy_chi_test("bmi_category", "binge_drinking", brfss_design)
xkabledply(result, title = "Survey Chi-square Test: BMI vs Binge Drinking")
result <- svy_chi_test("bmi_category", "any_exercise_last_month", brfss_design)
xkabledply(result, title = "Survey Chi-square Test: BMI vs Exercise")
result <- svy_chi_test("bmi_category", "interview_year", brfss_design)
xkabledply(result, title = "Survey Chi-square Test: BMI vs Interview Year")
result <- svy_chi_test("binge_drinking", "interview_year", brfss_design)
xkabledply(result, title = "Survey Chi-square Test: BMI vs Interview Year")
result <- svy_chi_test("overweight_or_obese", "binge_drinking", brfss_design)
xkabledply(result, title = "Survey Chi-square Test: BMI vs Interview Year")
anova_exercise <- svyglm(bmi ~ any_exercise_last_month, design = brfss_design)
anova_table <- survey_anova_table(anova_exercise, "any_exercise_last_month")
xkabledply(anova_table, title = "Survey Anova Test: BMI vs Exercise")
tukey_fixed <- survey_tukey_table_fixed(anova_exercise, "any_exercise_last_month", conf_level = 0.95, digits = 3)
xkabledply(tukey_fixed, title = "Survey Tukey Test: BMI vs Exercise")
anova_binge <- svyglm(bmi ~ binge_drinking, design = brfss_design)
anova_table <- survey_anova_table(anova_binge, "binge_drinking")
xkabledply(anova_table, title = "Survey Anova Test: BMI vs Binge drinking")
tukey_fixed <- survey_tukey_table_fixed(anova_binge, "binge_drinking", conf_level = 0.95, digits = 3)
xkabledply(tukey_fixed, title = "Survey Tukey Test: BMI vs Exercise")
anova_year <- svyglm(bmi ~ interview_year, design = brfss_design)
anova_table <- survey_anova_table(anova_year, "interview_year")
xkabledply(anova_table, title = "Survey Anova Test: BMI vs Interview Year")
colnames(brfss)
anova_binge <- svyglm(bmi ~ binge_drinking, design = brfss_design)
anova_table <- survey_anova_table(anova_binge, "binge_drinking")
xkabledply(anova_table, title = "Survey Anova Test: BMI vs Binge drinking")
tukey_fixed <- survey_tukey_table_fixed(anova_binge, "binge_drinking", conf_level = 0.95, digits = 3)
xkabledply(tukey_fixed, title = "Survey Tukey Test: BMI vs Exercise")
result <- svy_chi_test("binge_drinking", "interview_year", brfss_design)
xkabledply(result, title = "Survey Chi-square Test: binge_drinking vs Interview Year")
result <- svy_chi_test("overweight_or_obese", "binge_drinking", brfss_design)
xkabledply(result, title = "Survey Chi-square Test: overweight_or_obese vs binge_drinking")
result <- svy_chi_test("bmi_category", "interview_year", brfss_design)
xkabledply(result, title = "Survey Chi-square Test: BMI vs Interview Year")
